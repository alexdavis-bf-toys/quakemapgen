#############################################################################
# Makefile for building: quakemapgen.app/Contents/MacOS/quakemapgen
# Generated by qmake (1.07a) (Qt 3.3.4) on: Mon May 23 14:32:07 2005
# Project:  quakemapgen.pro
# Template: app
# Command: $(QMAKE) -o Makefile quakemapgen.pro
#############################################################################

####### Compiler, tools and options

CC       = cc
CXX      = c++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -Os  -DQT_NO_DEBUG -DQT_SHARED -DQT_ACCESSIBILITY_SUPPORT -DQT_TABLET_SUPPORT
CXXFLAGS = -pipe -Wall -W -Os  -DQT_NO_DEBUG -DQT_SHARED -DQT_ACCESSIBILITY_SUPPORT -DQT_TABLET_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/Developer/qt/mkspecs/default -I. -I$(QTDIR)/include
LINK     = c++
LFLAGS   = -headerpad_max_install_names -prebind
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -lqt
AR       = ar cq
RANLIB   = ranlib -s
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= cp -f
COPY_DIR = cp -f -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = 
SOURCES = main.cpp \
		world.cpp \
		block.cpp \
		object.cpp \
		stairs.cpp \
		teleport.cpp \
		room.cpp \
		entity.cpp \
		imagetemplateroom.cpp
OBJECTS = main.o \
		world.o \
		block.o \
		object.o \
		stairs.o \
		teleport.o \
		room.o \
		entity.o \
		imagetemplateroom.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = quakemapgen.pro
QMAKE_TARGET = quakemapgen
DESTDIR  = quakemapgen.app/Contents/MacOS/
TARGET   = quakemapgen.app/Contents/MacOS/quakemapgen

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile quakemapgen.app/Contents/MacOS/../PkgInfo quakemapgen.app/Contents/MacOS/../Info.plist $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	test -d quakemapgen.app/Contents/MacOS/ || mkdir -p quakemapgen.app/Contents/MacOS/
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: quakemapgen.pro  /Developer/qt/mkspecs/default/qmake.conf /Developer/qt/lib/libqt.prl
	$(QMAKE) -o Makefile quakemapgen.pro
qmake: 
	@$(QMAKE) -o Makefile quakemapgen.pro

quakemapgen.app/Contents/MacOS/../PkgInfo: 
	@test -d quakemapgen.app/Contents/MacOS/ || mkdir -p quakemapgen.app/Contents/MacOS/
	@$(DEL_FILE) quakemapgen.app/Contents/MacOS/../PkgInfo
	@echo "APPL????" >quakemapgen.app/Contents/MacOS/../PkgInfo
quakemapgen.app/Contents/MacOS/../Info.plist: 
	@test -d quakemapgen.app/Contents/MacOS/ || mkdir -p quakemapgen.app/Contents/MacOS/
	@$(DEL_FILE) quakemapgen.app/Contents/MacOS/../Info.plist
	@sed -e "s,@ICON@,application.icns,g" -e "s,@EXECUTABLE@,quakemapgen,g" "/Developer/qt/mkspecs/default/Info.plist.app" >"quakemapgen.app/Contents/MacOS/../Info.plist"
dist: 
	@mkdir -p .tmp/quakemapgen && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/quakemapgen/ && ( cd `dirname .tmp/quakemapgen` && $(TAR) quakemapgen.tar quakemapgen && $(GZIP) quakemapgen.tar ) && $(MOVE) `dirname .tmp/quakemapgen`/quakemapgen.tar.gz . && $(DEL_FILE) -r .tmp/quakemapgen

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) -r quakemapgen.app


FORCE:

####### Compile

main.o: main.cpp world.h \
		object.h \
		block.h \
		entity.h

world.o: world.cpp world.h \
		block.h \
		imagetemplateroom.h \
		stairs.h \
		room.h \
		entity.h \
		object.h

block.o: block.cpp block.h

object.o: object.cpp object.h \
		block.h \
		entity.h

stairs.o: stairs.cpp stairs.h \
		object.h \
		block.h \
		entity.h

teleport.o: teleport.cpp teleport.h \
		room.h \
		object.h \
		block.h \
		entity.h

room.o: room.cpp room.h \
		teleport.h \
		stairs.h \
		object.h \
		block.h \
		entity.h

entity.o: entity.cpp entity.h \
		block.h

imagetemplateroom.o: imagetemplateroom.cpp imagetemplateroom.h \
		teleport.h \
		entity.h \
		object.h \
		block.h

####### Install

install:  

uninstall:  

